generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Certification {
  id            String    @id @default(uuid())
  name          String
  issuer        String
  issueDate     DateTime?
  expiryDate    DateTime?
  credentialUrl String?
  description   String?
  featured      Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  Skill         Skill[]
}

model Experience {
  id          String    @id @default(uuid())
  company     String
  position    String
  location    String?
  startDate   DateTime
  endDate     DateTime?
  current     Boolean   @default(false)
  description String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Interest {
  id          String         @id @default(uuid())
  type        InterestType
  title       String
  description String
  status      InterestStatus @default(CURRENT)
  link        String?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

model Message {
  id        String   @id @default(uuid())
  name      String
  email     String?
  subject   String
  content   String
  read      Boolean  @default(false)
  featured  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id        String   @id @default(uuid())
  title     String   
  slug      String   @unique
  type      Type
  thumbnail String?
  content   String
  published Boolean  @default(false)
  tags      String[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Profile {
  id          String    @id @default(uuid())
  name        String
  title       String
  type        Type
  bio         String
  avatar      String?
  location    String?
  birthday    DateTime?
  email       String
  phoneNumber String?
  address     String?
  github      String?
  linkedin    String?
  website     String?
  discord     String?
  telegram    String?
  resumeUrl   String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Project {
  id           String        @id @default(uuid())
  title        String
  description  String
  image        String?
  githubUrl    String?
  liveUrl      String?
  technologies String[]
  projectType  Type
  featured     Boolean       @default(false)
  status       ProjectStatus @default(IN_PROGRESS)
  startDate    DateTime?
  endDate      DateTime?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Skill {
  id              String           @id @default(uuid())
  name            String
  category        SkillCategory
  proficiency     ProficiencyLevel
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  certificationId String?
  Certification   Certification?   @relation(fields: [certificationId], references: [id])
}

enum InterestStatus {
  CURRENT
  COMPLETED
  PLANNED
  ONGOING
}

enum InterestType {
  BOOK
  MUSIC
  HOBBY
  SPORT
  GAMES
  TECHNOLOGY
  LEARNING
  OTHER
  PROFESSIONAL
}

enum ProficiencyLevel {
  BEGINNER
  INTERMEDIATE
  ADVANCED
  EXPERT
  MASTER
}

enum ProjectStatus {
  PLANNED
  IN_PROGRESS
  COMPLETED
  ARCHIVED
}

enum SkillCategory {
  TECHNOLOGY
  SOFT_SKILLS
  OTHERS
}

enum Type {
  PROFESSIONAL
  CASUAL
}
